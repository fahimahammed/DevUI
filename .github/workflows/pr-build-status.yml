name: PR Build Status

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run build
        id: build
        run: |
          if ! npm run build; then
            echo "BUILD_FAILED=true" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: Post PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const buildFailed = process.env.BUILD_FAILED === 'true';
            const prNumber = context.payload.pull_request.number;

            // Fetch existing comment (to update instead of duplicating)
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const botComment = comments.find(c => c.user.login === context.actor && c.body.startsWith('**Build Status**'));

            const body = buildFailed
              ? `**Build Status:** ❌ Failed\n\`\`\`\nBuild logs:\nCheck Actions workflow for details.\n\`\`\``
              : '**Build Status:** ✅ Success';

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body
              });
            }
